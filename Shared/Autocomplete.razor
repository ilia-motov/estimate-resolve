@typeparam T where T : IDto

<MudAutocomplete T="T"
                 Label=@Label
                 @bind-Value="Value"
                 @bind-Value:after="UpdateValue"
                 SearchFunc="@Search"
                 ToStringFunc="@(d => d == null ? null : d.Name)"
                 ShowProgressIndicator="true"
                 ProgressIndicatorColor="Color.Default">
    <NoItemsTemplate>
        <MudText Align="Align.Center" Class="px-4 py-1">
            Ничего не найдено
            <MudButton Class="mb-16" Variant="Variant.Filled" Color="Color.Primary">Создать</MudButton>
        </MudText>
    </NoItemsTemplate>
</MudAutocomplete>

@code {
    [Parameter]
    public string Label { get; set; }

    [Parameter]
    public T Value { get; set; }

    [Parameter]
    public EventCallback<T> ValueChanged { get; set; }

    [Inject]
    public IController<T> Controller { get; set; }

    private async Task<IEnumerable<T>> Search(string value) =>
        await Controller.Autocomplete(value);

    private async Task UpdateValue() => await ValueChanged.InvokeAsync(Value);
}
